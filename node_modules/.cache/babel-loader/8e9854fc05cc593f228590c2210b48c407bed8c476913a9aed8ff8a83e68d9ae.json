{"ast":null,"code":"import React,{useState}from\"react\";import{random}from\"lodash\";// Import random function from lodash library\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PassWordEntry=()=>{const[currentPassword,setCurrentPassword]=useState(\"\");const[confirmNewPassword,setConfirmNewPassword]=useState(false);const handlePasswordChange=e=>{setCurrentPassword(e.target.value);};const handleSubmit=e=>{e.preventDefault();const confirmed=window.confirm(\"Are you sure you want to create a new password based on \\\"\".concat(currentPassword,\"\\\"?\"));if(confirmed){setConfirmNewPassword(true);}};const generateStrongPassword=password=>{const shuffleString=str=>{const array=str.split(\"\");for(let i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[array[i],array[j]]=[array[j],array[i]];}return array.join(\"\");};const addRandomNumbers=(str,count)=>{const numbers=\"0123456789\";for(let i=0;i<count;i++){const randomDigit=numbers[Math.floor(Math.random()*numbers.length)];str+=randomDigit;}return str;};let shuffledPassword=shuffleString(password);const desiredLength=Math.max(12,password.length);const numbersToAdd=Math.max(0,desiredLength-password.length);// Add random numbers to the shuffled password\nshuffledPassword=addRandomNumbers(shuffledPassword,numbersToAdd);return shuffledPassword;};const generateWeakPassword=password=>{return password.toUpperCase();};const handlePasswordLevelSelect=level=>{const newGeneratedPassword=level===\"Strong\"?generateStrongPassword(currentPassword):generateWeakPassword(currentPassword);const confirmed=window.confirm(\"You selected \\\"\".concat(level,\"\\\" level for password change. Proceed with new password: \").concat(newGeneratedPassword,\"?\"));if(confirmed){console.log(\"New password created with \\\"\".concat(level,\"\\\" strength:\"),newGeneratedPassword);setCurrentPassword(\"\");setConfirmNewPassword(false);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"It's Time For Something New!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row justify-content-center\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"magic\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control\",placeholder:\"Enter Current Password\",value:currentPassword,onChange:handlePasswordChange})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",style:{marginTop:\"10px\"},children:\"Submit\"})]})})}),confirmNewPassword&&/*#__PURE__*/_jsxs(\"div\",{className:\"password-level-select\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Select Password Change Level:\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-info\",onClick:()=>handlePasswordLevelSelect(\"Weak\"),style:{marginRight:\"10px\",marginTop:\"10px\"},children:\"Weak\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:()=>handlePasswordLevelSelect(\"Strong\"),style:{marginTop:\"10px\"},children:\"Strong\"})]})]});};export default PassWordEntry;","map":{"version":3,"names":["React","useState","random","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PassWordEntry","currentPassword","setCurrentPassword","confirmNewPassword","setConfirmNewPassword","handlePasswordChange","e","target","value","handleSubmit","preventDefault","confirmed","window","confirm","concat","generateStrongPassword","password","shuffleString","str","array","split","i","length","j","Math","floor","join","addRandomNumbers","count","numbers","randomDigit","shuffledPassword","desiredLength","max","numbersToAdd","generateWeakPassword","toUpperCase","handlePasswordLevelSelect","level","newGeneratedPassword","console","log","children","className","onSubmit","type","placeholder","onChange","style","marginTop","onClick","marginRight"],"sources":["C:/Users/awode/Downloads/passowrdSecurity/src/passwordentry.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { random } from \"lodash\"; // Import random function from lodash library\r\n\r\nconst PassWordEntry = () => {\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState(false);\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setCurrentPassword(e.target.value);\r\n  };\r\n\r\n\r\n\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const confirmed = window.confirm(\r\n      `Are you sure you want to create a new password based on \"${currentPassword}\"?`\r\n    );\r\n\r\n    if (confirmed) {\r\n      setConfirmNewPassword(true);\r\n    }\r\n  };\r\n\r\n  const generateStrongPassword = (password) => {\r\n    const shuffleString = (str) => {\r\n     \r\n      const array = str.split(\"\");\r\n      for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n      }\r\n      return array.join(\"\");\r\n    };\r\n\r\n    const addRandomNumbers = (str, count) => {\r\n      \r\n      const numbers = \"0123456789\";\r\n      for (let i = 0; i < count; i++) {\r\n        const randomDigit = numbers[Math.floor(Math.random() * numbers.length)];\r\n        str += randomDigit;\r\n      }\r\n      return str;\r\n    };\r\n\r\n\r\n    let shuffledPassword = shuffleString(password);\r\n\r\n\r\n    const desiredLength = Math.max(12, password.length); \r\n    const numbersToAdd = Math.max(0, desiredLength - password.length);\r\n\r\n    // Add random numbers to the shuffled password\r\n    shuffledPassword = addRandomNumbers(shuffledPassword, numbersToAdd);\r\n\r\n    return shuffledPassword;\r\n  };\r\n\r\n  const generateWeakPassword = (password) => {\r\n\r\n    return password.toUpperCase();\r\n  };\r\n\r\n  const handlePasswordLevelSelect = (level) => {\r\n    const newGeneratedPassword =\r\n      level === \"Strong\"\r\n        ? generateStrongPassword(currentPassword)\r\n        : generateWeakPassword(currentPassword);\r\n\r\n    const confirmed = window.confirm(\r\n      `You selected \"${level}\" level for password change. Proceed with new password: ${newGeneratedPassword}?`\r\n    );\r\n\r\n    if (confirmed) {\r\n      console.log(\r\n        `New password created with \"${level}\" strength:`,\r\n        newGeneratedPassword\r\n      );\r\n      setCurrentPassword(\"\");\r\n      setConfirmNewPassword(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p>It's Time For Something New!</p>\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <form className=\"magic\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter Current Password\"\r\n                value={currentPassword}\r\n                onChange={handlePasswordChange}\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              style={{ marginTop: \"10px\" }}\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      {confirmNewPassword && (\r\n        <div className=\"password-level-select\">\r\n          <h3>Select Password Change Level:</h3>\r\n          <button\r\n            className=\"btn btn-info\"\r\n            onClick={() => handlePasswordLevelSelect(\"Weak\")}\r\n            style={{ marginRight: \"10px\", marginTop: \"10px\" }}\r\n          >\r\n            Weak\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => handlePasswordLevelSelect(\"Strong\")}\r\n            style={{ marginTop: \"10px\" }}\r\n          >\r\n            Strong\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PassWordEntry;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
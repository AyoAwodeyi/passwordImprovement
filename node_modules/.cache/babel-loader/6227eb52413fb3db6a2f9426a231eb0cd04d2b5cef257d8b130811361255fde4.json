{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\awode\\\\Downloads\\\\PasswordGen\\\\passwordgen\\\\src\\\\passwordentry.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Modal from \"./Modal\"; // Assuming you have a Modal component defined\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PassWordEntry = () => {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setShowModal(true);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    setPassword(\"\"); // Reset password field after closing modal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"magic\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\" // Change to 'password' type for secure input\n              ,\n              className: \"form-control\",\n              placeholder: \"Enter password\",\n              value: password,\n              onChange: handlePasswordChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: closeModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your entered password: \", password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: closeModal,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(PassWordEntry, \"X1OLUcm+EC/glz3CztyTeABz5DQ=\");\n_c = PassWordEntry;\nexport default PassWordEntry;\nvar _c;\n$RefreshReg$(_c, \"PassWordEntry\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","PassWordEntry","_s","password","setPassword","showModal","setShowModal","handlePasswordChange","e","target","value","handleSubmit","preventDefault","closeModal","className","children","onSubmit","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClose","onClick","_c","$RefreshReg$"],"sources":["C:/Users/awode/Downloads/PasswordGen/passwordgen/src/passwordentry.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"./Modal\"; // Assuming you have a Modal component defined\r\n\r\nconst PassWordEntry = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setPassword(\"\"); // Reset password field after closing modal\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-6\">\r\n          <form className=\"magic\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\" // Change to 'password' type for secure input\r\n                className=\"form-control\"\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n                onChange={handlePasswordChange}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Render modal if showModal is true */}\r\n      {showModal && (\r\n        <Modal onClose={closeModal}>\r\n          <h2>Create New Password</h2>\r\n          {/* Here you can add inputs and logic to create a new password */}\r\n          {/* For simplicity, let's just display the entered password */}\r\n          <p>Your entered password: {password}</p>\r\n          <button className=\"btn btn-primary\" onClick={closeModal}>\r\n            Close\r\n          </button>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PassWordEntry;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}